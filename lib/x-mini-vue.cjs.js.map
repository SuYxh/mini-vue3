{"version":3,"file":"x-mini-vue.cjs.js","sources":["../src/runtime-core/vnode.ts","../src/runtime-core/h.ts","../src/runtime-core/helpers/renderSlots.ts","../src/shared/index.ts","../src/reactivity/effect.ts","../src/reactivity/baseHandlers.ts","../src/reactivity/reactive.ts","../src/runtime-core/componentPublicInstance.ts","../src/runtime-core/componentProps.ts","../src/runtime-core/componentEmit.ts","../src/runtime-core/componentSlots.ts","../src/runtime-core/component.ts","../src/runtime-core/apiInject.ts","../src/runtime-core/createApp.ts","../src/runtime-core/renderer.ts","../src/runtime-dom/index.ts","../src/reactivity/ref.ts"],"sourcesContent":["import { ShapeFlags } from \"../shared/ShapeFlags\";\nexport const Fragment = Symbol(\"Fragment\");\nexport const Text = Symbol(\"Text\");\n\nexport function createVNode(type, props?, children?) {\n  const vnode = {\n    type,\n    props,\n    children,\n    key: props && props.key,\n    shapeFlag: getShapeFlag(type),\n    el: null,\n  };\n\n  if (typeof children === \"string\") {\n    vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN;\n  } else if (Array.isArray(children)) {\n    vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN;\n  }\n\n  // 条件： 组件 + children 是一个对象\n  if(vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT){\n    if(typeof children === \"object\"){\n      vnode.shapeFlag |= ShapeFlags.SLOT_CHILDREN\n    }\n  }\n\n\n  return vnode;\n}\n\nexport function createTextVNode(text: string) {\n  return createVNode(Text, {}, text);\n}\n\nfunction getShapeFlag(type) {\n  return typeof type === \"string\"\n    ? ShapeFlags.ELEMENT\n    : ShapeFlags.STATEFUL_COMPONENT;\n}\n","import { createVNode } from \"./vnode\";\n\nexport function h(type, props?, children?) {\n  return createVNode(type, props, children);\n}\n","import { createVNode, Fragment } from \"../vnode\";\n\nexport function renderSlots(slots, name = 'default', props) {\n  const slot = slots[name]\n\n  if (slot) {\n    if (typeof slot === \"function\") {\n      // 说明用户使用的是具名插槽或者作用域插槽\n      return createVNode(Fragment, {}, slot(props));\n    }else if (Array.isArray(slot)) {\n      // 说明用户使用的是普通插槽\n      return createVNode(Fragment, {}, slot);\n    }\n  }\n}\n","export const extend = Object.assign;\nexport const EMPTY_OBJ = {};\nexport const isObject = (value) => {\n  return value !== null && typeof value === \"object\";\n};\n\nexport const hasChanged = (val, newValue) => {\n  return !Object.is(val, newValue);\n};\n\nexport const hasOwn = (val, key) =>\n  Object.prototype.hasOwnProperty.call(val, key);\n\nexport const camelize = (str: string) => {\n  return str.replace(/-(\\w)/g, (_, c: string) => {\n    return c ? c.toUpperCase() : \"\";\n  });\n};\n\nconst capitalize = (str: string) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nexport const toHandlerKey = (str: string) => {\n  return str ? \"on\" + capitalize(str) : \"\";\n};\n","import { extend } from \"../shared\";\n\nlet activeEffect\nlet shouldTrack\nexport class ReactiveEffect {\n  private _fn: any\n  deps = [];\n  active = true;\n  onStop?: () => void;\n  public scheduler: Function | undefined;\n  constructor(fn, scheduler?: Function) {\n    this._fn = fn\n    this.scheduler = scheduler\n  }\n\n  run() {\n    // 调用 stop 后 this.active 变为了 false， shouldTrack 为 false，在 track 方法就不会在收集到依赖\n    if (!this.active) {\n      return this._fn();\n    }\n\n    // 应该收集\n    shouldTrack = true;\n    // 保存一下当前的 activeEffect\n    activeEffect = this;\n    const r = this._fn();\n\n    // 重置\n    shouldTrack = false;\n\n    return r;\n  }\n\n  stop() {\n    if (this.active) {\n      cleanupEffect(this);\n      if (this.onStop) {\n        this.onStop();\n      }\n      this.active = false;\n    }\n  }\n}\n\nfunction cleanupEffect(effect) {\n  effect.deps.forEach((dep: any) => {\n    dep.delete(effect);\n  });\n\n  effect.deps.length = 0\n}\n\n// targetMap 为什么要是全局的？\n// 如果 targetMap 不是全局的，只是在 track 方法中定义，那么在 trigger 中就无法获取到 targetMap\nconst targetMap = new Map()\nexport function track(target, key) {\n  // 如果没有这句话就会报错，为什么会有这句话呢？ activeEffect 什么时候不存在？\n  // 当只有用户写了 effect 函数的时候，才会有\n  // if (!activeEffect) return;\n  // if (!shouldTrack) return\n\n  // 将上面2 行代码进行优化\n  if (!isTracking()) return\n\n  // 我们在运行时，可能会创建多个 target，每个 target 还会可能有多个 key，每个 key 又关联着多个 effectFn\n  // 而且 target -> key -> effectFn，这三者是树形的关系\n  // 因此就可以创建一个 Map 用于保存 target，取出来就是每个 key 对应这一个 depsMap，而每个 depsMap 又是一个 Set\n  // 使用 set 结构（避免保存重复的 effect）\n  let depsMap = targetMap.get(target)\n  if (!depsMap) {\n    depsMap = new Map()\n    targetMap.set(target, depsMap)\n  }\n\n  let dep = depsMap.get(key)\n  if (!dep) {\n    dep = new Set()\n    depsMap.set(key, dep)\n  }\n\n  trackEffects(dep)\n}\n\n// 抽离函数\nexport function trackEffects(dep) {\n  // 看看 dep 之前有没有添加过，添加过的话 那么就不添加了\n  if (dep.has(activeEffect)) return\n\n  activeEffect.deps.push(dep)\n  dep.add(activeEffect)\n}\nexport function isTracking() {\n  return shouldTrack && activeEffect !== undefined;\n}\n\nexport function trigger(target, key) {\n  // trigger 的逻辑就更加简单了，我们只需要取出depsMap中 key 对应的 dep， 这个 dep 是 一个 set 结构，再遍历 set 执行每个 effect 就可以了\n  const depsMap = targetMap.get(target)\n  const dep = depsMap.get(key)\n  triggerEffects(dep)\n}\n\nexport function triggerEffects(deps) {\n  for (const effect of deps) {\n    if (effect.scheduler) {\n      effect.scheduler()\n    } else {\n      effect.run()\n    }\n  }\n}\n\nexport function effect(fn, options:any = {}) {\n  const _effect = new ReactiveEffect(fn, options.scheduler)\n  extend(_effect, options);\n\n  _effect.run()\n\n  const runner: any = _effect.run.bind(_effect)\n  runner.effect = _effect;\n\n  return runner\n}\n\nexport function stop(runner) {\n  runner.effect.stop();\n}","import { extend, isObject } from \"../shared\";\nimport { track, trigger } from \"./effect\"\nimport { reactive, ReactiveFlags, readonly } from \"./reactive\";\n\n// \nconst get = createGetter()\nconst readonlyGet = createGetter(true)\nconst set = createSetter()\nconst shallowReadonlyGet = createGetter(true, true);\nconst shallowMutableGet = createGetter(false, true)\n\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get(target, key, receiver) {\n    if (key === ReactiveFlags.IS_REACTIVE) {\n      return !isReadonly;\n    } else if (key === ReactiveFlags.IS_READONLY) {\n      return isReadonly;\n    } else if (key === ReactiveFlags.RAW) {\n      // 判断一下，如果访问的 key 是 ReactiveFlag.RAW，就直接返回就可以了\n      return target\n    }\n\n    const res = Reflect.get(target, key, receiver)\n\n    if (shallow) {\n      return res;\n    }\n\n    if (isObject(res)) {\n      return isReadonly ? readonly(res) : reactive(res);\n    }\n\n    // readonly 的对象不会被 track\n    if (!isReadonly) {\n      track(target, key)\n    }\n    return res\n  }\n}\n\n\nfunction createSetter() {\n  return function set(target, key, val, receiver) {\n    const res = Reflect.set(target, key, val, receiver)\n    trigger(target, key)\n    return res\n  }\n}\n\n\n// mutable 可变的\nexport const mutableHandlers = {\n  // 这里不需要每次都调用 createGetter 这个方法，所以缓存一下，初始化的时候调用一次就好\n  // get: createGetter(),\n  // set: createSetter(),\n  get,\n  set,\n}\n\nexport const readonlyHandlers = {\n  get: readonlyGet,\n  // readonly 的属性值不可更改，set 中直接返回 true 即可\n  set(target, key, value) {\n    // 在这里警告\n    console.warn(\n      `key: ${key} set value: ${value} fail, because the target is readonly`,\n      target\n    )\n    return true\n  },\n}\n\nexport const shallowReadonlyHandlers = extend({}, readonlyHandlers, {\n  get: shallowReadonlyGet,\n});\n\nexport const shalloReactiveHandlers = extend({}, mutableHandlers, {\n  get: shallowMutableGet,\n})","import { mutableHandlers, readonlyHandlers, shallowReadonlyHandlers, shalloReactiveHandlers } from './baseHandlers';\n\nexport const enum ReactiveFlags {\n  IS_REACTIVE = \"__v_isReactive\",\n  IS_READONLY = \"__v_isReadonly\",\n  RAW = '__v_raw',\n}\n\nfunction createReactiveObject(raw, baseHandlers) {\n  return new Proxy(raw, baseHandlers)\n}\n\nexport function reactive(raw) {\n  return createReactiveObject(raw, mutableHandlers)\n}\n\n// 1、readonly 的对象不会被 track，\n// 2、readonly 的属性值不可更改，set 中直接返回 true 即可\nexport function readonly(raw) {\n  return createReactiveObject(raw, readonlyHandlers)\n}\n\nexport function shallowReadonly(raw) {\n  return createReactiveObject(raw, shallowReadonlyHandlers);\n}\n\nexport function shallowReactive(raw) {\n  return createReactiveObject(raw, shalloReactiveHandlers)\n}\n\nexport function isReactive(value) {\n  // 如果 value 是一个响应式对象， 在 value 身上进行取值，就会触发 getter，在 getter 中进行了判断，返回了 true\n  // 如果 value 不是一个响应式对象，value[ReactiveFlags.IS_REACTIVE] 的值为 undefined， 转成 boolean 也就是 false\n  return !!value[ReactiveFlags.IS_REACTIVE];\n}\n\nexport function isReadonly(value) {\n  return !!value[ReactiveFlags.IS_READONLY];\n}\n\nexport function isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\n\nexport function toRaw(observed) {\n  // 这里就是嵌套转换了\n  const original = observed && observed[ReactiveFlags.RAW]\n  return isProxy(original) ? toRaw(original) : original\n}","import { hasOwn } from \"../shared/index\";\n\nconst publicPropertiesMap = {\n  $el: (i) => i.vnode.el,\n  $slots: (i) => i.slots,\n};\n\nexport const PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    const { setupState, props } = instance;\n\n    if (hasOwn(setupState, key)) {\n      return setupState[key];\n    } else if (hasOwn(props, key)) {\n      return props[key];\n    }\n\n    const publicGetter = publicPropertiesMap[key];\n    if (publicGetter) {\n      return publicGetter(instance);\n    }\n  },\n};\n","export function initProps(instance, rawProps) {\n  instance.props = rawProps || {}\n}\n","import { camelize, toHandlerKey } from \"../shared/index\";\n\nexport function emit(instance, event, ...args) {\n  const { props } = instance;\n  const handlerName = toHandlerKey(camelize(event));\n  const handler = props[handlerName];\n  handler && handler(...args);\n}\n","import { ShapeFlags } from \"../shared/ShapeFlags\";\n\nexport function initSlots(instance, children) {\n  // 插槽的不同形式对应的 children 不同，如下：\n  // 1、h(Foo, {}, h('p', {}, '123')); ==> children:  {\"type\":\"p\",\"props\":{},\"children\":\"123\",\"shapeFlag\":5,\"el\":null}\n  // 2、h(Foo, {}, [h('p', {}, '123'), h('p', {}, '234')]); ==> children: [{\"type\":\"p\",\"props\":{},\"children\":\"123\",\"shapeFlag\":5,\"el\":null},{\"type\":\"p\",\"props\":{},\"children\":\"234\",\"shapeFlag\":5,\"el\":null}]\n  // 3、 const foo = h(Foo, {}, { header: ({age}) => h('p', {}, 'header' + age), footer: () => h('p', {}, 'footer'), }); 其 children 形式如下：\n  //    children: ==>\n  //      {\n  //        footer :  () => h('p', {}, 'footer')\n  //        header :  ({age}) => h('p', {}, 'header' + age)\n  //      } \n\n  const { vnode } = instance;\n  // 是插槽的时候才需要处理\n  if (vnode.shapeFlag & ShapeFlags.SLOT_CHILDREN) {\n    // 如果 children 存在 shapeFlag 属性，说明他是一个 vnode，此时用户应该是这样使用插槽的：\n    // h(Foo, {}, h('p', {}, '123'));\n    if (children.shapeFlag) {\n      instance.slots.default = [children]\n      return\n    }\n\n    // 如果 children 是一个数组，此时用户应该是这样使用插槽的：\n    // h(Foo, {}, [h('p', {}, '123'), h('p', {}, '234')]);\n    // children 的形式为： [{\"type\":\"p\",\"props\":{},\"children\":\"123\",\"shapeFlag\":5,\"el\":null},{\"type\":\"p\",\"props\":{},\"children\":\"234\",\"shapeFlag\":5,\"el\":null}]\n    if (Array.isArray(children)) {\n      instance.slots.default = children\n      return\n    }\n\n    // 到这里说明 children 是一个对象，用户应该是使用的 具名插槽或者是作用域插槽\n    // 具体形式请看上方注释 《插槽的不同形式对应的 children 不同》\n    normalizeObjectSlots(children, instance.slots);\n  }\n}\n\nfunction normalizeObjectSlots(children: any, slots: any) {\n  for (const key in children) {\n    const value = children[key]\n    // 具名插槽\n    /**\n     * 具名插槽 对应的使用方式\n     * const foo = h(Foo, {}, {\n        header:  h('p', {}, 'header'),\n        footer:  h('p', {}, 'footer'),\n      });\n\n      其实 normalizeSlotValue(value); 中的 value 就是 h('p', {}, 'header') \n     */\n    // slots[key] = normalizeSlotValue(value);\n    // 作用域插槽使用函数\n\n     /**\n     * 作用域插槽对应的使用方式\n     * const foo = h(Foo, {}, {\n        header: ({age}) => h('p', {}, 'header' + age),\n        footer: () => h('p', {}, 'footer'),\n      });\n\n      其实 slots[key] = (props) => normalizeSlotValue(value(props)); 中的 value(props) 就是 header 或者 footer 对应的函数\n     */\n    slots[key] = (props) => normalizeSlotValue(value(props));\n  }\n}\n\nfunction normalizeSlotValue(value) {\n  return Array.isArray(value) ? value : [value];\n}\n","import { shallowReadonly } from \"../reactivity/reactive\";\nimport { PublicInstanceProxyHandlers } from \"./componentPublicInstance\";\nimport { initProps } from \"./componentProps\";\nimport { emit } from \"./componentEmit\";\nimport { initSlots } from \"./componentSlots\";\nimport { proxyRefs } from \"../index\";\n\nexport function createComponentInstance(vnode, parent) {\n  const component = {\n    vnode,\n    type: vnode.type,\n    setupState: {},\n    props: {},\n    slots: {},\n    provides: parent ? parent.provides : {},\n    parent,\n    isMounted: false,\n    subTree: {},\n    emit: () => {},\n  };\n\n  component.emit = emit.bind(null, component) as any;\n\n  return component;\n}\n\nexport function setupComponent(instance) {\n  initProps(instance, instance.vnode.props);\n  initSlots(instance, instance.vnode.children);\n  setupStatefulComponent(instance);\n}\n\nfunction setupStatefulComponent(instance: any) {\n  const Component = instance.type;\n\n  // 在这里对于 instance 的 this 进行拦截\n  instance.proxy = new Proxy({ _: instance }, PublicInstanceProxyHandlers);\n\n  const { setup } = Component;\n\n  if (setup) {\n    setCurrentInstance(instance);\n    const setupResult = setup(shallowReadonly(instance.props), {\n      emit: instance.emit,\n    });\n    setCurrentInstance(null);\n\n    handleSetupResult(instance, setupResult);\n  }\n}\n\nfunction handleSetupResult(instance, setupResult: any) {\n  // function Object\n  // TODO function\n  if (typeof setupResult === \"object\") {\n    instance.setupState = proxyRefs(setupResult);\n  }\n\n  finishComponentSetup(instance);\n}\n\nfunction finishComponentSetup(instance: any) {\n  const Component = instance.type;\n\n  if (Component.render) {\n    instance.render = Component.render;\n  }\n}\n\nlet currentInstance = null;\n\nexport function getCurrentInstance() {\n  return currentInstance;\n}\n\nexport function setCurrentInstance(instance) {\n  currentInstance = instance;\n}\n","import { getCurrentInstance } from \"./component\";\n\nexport function provide(key, value) {\n  const currentInstance: any = getCurrentInstance();\n\n  if (currentInstance) {\n    let { provides } = currentInstance;\n\n    const parentProvides = currentInstance.parent.provides;\n\n    if (provides === parentProvides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n\n    provides[key] = value;\n  }\n}\n\nexport function inject(key, defaultValue) {\n  const currentInstance: any = getCurrentInstance();\n\n  if (currentInstance) {\n    const parentProvides = currentInstance.parent.provides;\n    \n    if (key in parentProvides) {\n      return parentProvides[key];\n    }else if(defaultValue){\n      if(typeof defaultValue === \"function\"){\n        return defaultValue()\n      }\n      return defaultValue\n    }\n  }\n}\n","import { createVNode } from \"./vnode\";\n\nexport function createAppAPI(render) {\n  return function createApp(rootComponent) {\n    return {\n      mount(rootContainer) {\n        const vnode = createVNode(rootComponent);\n\n        render(vnode, rootContainer);\n      },\n    };\n  };\n}\n","import { ShapeFlags } from \"../shared/ShapeFlags\";\nimport { createComponentInstance, setupComponent } from \"./component\";\nimport { createAppAPI } from \"./createApp\";\nimport { Fragment, Text } from \"./vnode\";\nimport { effect } from '../reactivity/effect';\nimport { EMPTY_OBJ } from \"../shared\";\n\nexport function createRenderer(options) {\n  const {\n    createElement: hostCreateElement,\n    patchProp: hostPatchProp,\n    insert: hostInsert,\n    remove: hostRemove,\n    setElementText: hostSetElementText,\n  } = options;\n\n  function render(vnode, container) {\n    patch(null, vnode, container, null);\n  }\n\n  // n1 - 之前的虚拟节点，如果不存在说明是初始化流程\n  // n2 - 新的虚拟节点\n  function patch(n1, n2, container, parentComponent) {\n    const { type, shapeFlag } = n2;\n\n    switch (type) {\n      case Fragment:\n        processFragment(n1, n2, container, parentComponent);\n        break;\n      case Text:\n        processText(n1, n2, container);\n        break;\n\n      default:\n        if (shapeFlag & ShapeFlags.ELEMENT) {\n          processElement(n1, n2, container, parentComponent);\n        } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n          processComponent(n1, n2, container, parentComponent);\n        }\n        break;\n    }\n  }\n\n  function processText(n1, n2: any, container: any) {\n    const { children } = n2;\n    const textNode = (n2.el = document.createTextNode(children));\n    container.append(textNode);\n  }\n\n  function processFragment(n1, n2: any, container: any, parentComponent) {\n    mountChildren(n2.children, container, parentComponent);\n  }\n\n  function processElement(n1, n2: any, container: any, parentComponent) {\n    // n1 不存在说明是初始化\n    if (!n1) {\n      mountElement(n2, container, parentComponent);\n    } else {\n      patchElement(n1, n2, container, parentComponent);\n    }\n  }\n\n  function patchElement(n1, n2, container, parentComponent) {\n    console.log(\"patchElement\");\n    console.log(\"n1\", n1);\n    console.log(\"n2\", n2);\n\n    const oldProps = n1.props || EMPTY_OBJ;\n    const newProps = n2.props || EMPTY_OBJ;\n\n    // 这里需要传递 el，我们需要考虑一点，到这一层的时候\n    // n2.el 是 undefined，所以我们需要把 n1.el 赋给 n2.el\n    // 这是因为在下次 patch 的时候 n2 === n1, 此刻的新节点变成旧节点，el 就生效了\n    const el = (n2.el = n1.el);\n\n    patchChildren(n1, n2, el, parentComponent);\n    patchProps(el, oldProps, newProps);\n  }\n\n  // n1 是老 vnode\n  // n2 是新 vnode\n  function patchChildren(n1, n2, container, parentComponent) {\n    const prevShapeFlag = n1.shapeFlag;\n    const c1 = n1.children;\n    const { shapeFlag } = n2;\n    const c2 = n2.children;\n    // 新的节点是文本\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      // 老的节点是数组\n      if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n        // 把老的 children 清空\n        unmountChildren(n1.children);\n      }\n\n      // 老的节点是文本 【老的节点是数组是数组的时候也会走这里哦】\n      if (c1 !== c2) {\n        // 设置新的 text\n        hostSetElementText(container, c2);\n      }\n    } else {\n      // 老的： text =>  新的： array\n      if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) {\n        // 把老的 text 删除掉\n        hostSetElementText(container, \"\");\n        // 然后渲染新的节点\n        mountChildren(c2, container, parentComponent);\n      } else {\n        patchKeyedChildren(c1, c2, container, parentComponent);\n      }\n    }\n  }\n\n  function patchKeyedChildren(c1, c2, container, parentComponent) {\n    const l2 = c2.length;\n    // 声明三个指针，e1 是老节点最后一个元素，e2 是新节点最后一个元素，i 是当前对比的元素\n    let i = 0;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n\n    function isSomeVNodeType(n1, n2) {\n      return n1.type === n2.type && n1.key === n2.key;\n    }\n\n    // 左侧 -- 新旧节点头部对比\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i];\n      \n      // 如果当前对比的 vnode 相同，就进入 patch 阶段，如果不相等，直接中断掉这个循环\n      if (isSomeVNodeType(n1, n2)) {\n        patch(n1, n2, container, parentComponent);\n      } else {\n        break;\n      }\n\n      i ++\n    }\n\n    // 右侧 -- 新旧节点尾部对比\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2];\n\n      if (isSomeVNodeType(n1, n2)) {\n        patch(n1, n2, container, parentComponent);\n      } else {\n        break;\n      }\n\n      e1--;\n      e2--;\n    }\n\n    // 新的比老的多，需要进行创建\n    // 新节点比旧节点长，在尾部添加新节点 \n    if (i > e1) {\n      if (i <= e2) {\n        while (i <= e2) {\n          patch(null, c2[i], container, parentComponent);\n          i++;\n        }\n      }\n    }\n\n    console.log('i', i, e1, e2);\n  }\n\n  function unmountChildren(children) {\n    for (let i = 0; i < children.length; i++) {\n      const el = children[i].el;\n      hostRemove(el);\n    }\n  }\n\n\n  function patchProps(el, oldProps, newProps) {\n    if (oldProps !== newProps) {\n      // foo 之前的值和现在的值不一样了 --> 修改\n      for (const key in newProps) {\n        const prevProp = oldProps[key];\n        const nextProp = newProps[key];\n\n        if (prevProp !== nextProp) {\n          hostPatchProp(el, key, prevProp, nextProp);\n        }\n      }\n\n      if (oldProps !== EMPTY_OBJ) {\n        // 之前存在的属性在新的里面没有了 --> 删除\n        for (const key in oldProps) {\n          if (!(key in newProps)) {\n            hostPatchProp(el, key, oldProps[key], null);\n          }\n        }\n      }\n    }\n  }\n\n  function mountElement(vnode: any, container: any, parentComponent) {\n    const el = (vnode.el = hostCreateElement(vnode.type));\n\n    const { children, shapeFlag } = vnode;\n\n    // children\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n      el.textContent = children;\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n      mountChildren(vnode.children, el, parentComponent);\n    }\n\n    // props\n    const { props } = vnode;\n    for (const key in props) {\n      const val = props[key];\n      hostPatchProp(el, key, null, val);\n    }\n   \n    hostInsert(el, container);\n  }\n\n  function mountChildren(children, container, parentComponent) {\n    children.forEach((v) => {\n      patch(null, v, container, parentComponent);\n    });\n  }\n\n  function processComponent(n1, n2: any, container: any, parentComponent) {\n    mountComponent(n2, container, parentComponent);\n  }\n\n  function mountComponent(initialVNode: any, container, parentComponent) {\n    const instance = createComponentInstance(initialVNode, parentComponent);\n\n    setupComponent(instance);\n    setupRenderEffect(instance, initialVNode, container);\n  }\n\n  function setupRenderEffect(instance: any, initialVNode, container) {\n    effect(() => {\n      if (!instance.isMounted) {\n        console.log(\"init\");\n        const { proxy } = instance;\n        // 将虚拟节点放在实例上，在更新的时候会拿出来对比\n        const subTree = (instance.subTree = instance.render.call(proxy));\n        patch(null, subTree, container, instance);\n        initialVNode.el = subTree.el;\n        // 更新之后打一个标识\n        instance.isMounted = true;\n      } else {\n        console.log(\"update\");\n        const { proxy } = instance;\n        const subTree = instance.render.call(proxy);\n        // 从实例上取出之前放置的虚拟节点 subTree，也就是在初始化时进行的赋值\n        const prevSubTree = instance.subTree;\n        // 更新组件实例上的 subTree\n        instance.subTree = subTree;\n        patch(prevSubTree, subTree, container, instance);\n      }\n    });\n  }\n\n  return {\n    createApp: createAppAPI(render),\n  };\n}\n","import { createRenderer } from \"../runtime-core/index\";\n\nfunction createElement(type) {\n  return document.createElement(type);\n}\n\nfunction patchProp(el, key, prevVal, nextVal) {\n  const isOn = (key: string) => /^on[A-Z]/.test(key);\n  if (isOn(key)) {\n    const event = key.slice(2).toLowerCase();\n    el.addEventListener(event, nextVal);\n  } else {\n    // null undefined --> 删除\n    if (nextVal === undefined || nextVal === null) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, nextVal);\n    }\n  }\n}\n\n\nfunction insert(el, parent) {\n  parent.append(el);\n}\n\nfunction remove(child) {\n  const parent = child.parentNode;\n  if (parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction setElementText(el, text) {\n  el.textContent = text;\n}\n\nconst renderer: any = createRenderer({\n  createElement,\n  patchProp,\n  insert,\n  remove,\n  setElementText,\n});\n\nexport function createApp(...args) {\n  return renderer.createApp(...args);\n}\n\nexport * from \"../runtime-core/index\";\n","import { hasChanged, isObject } from \"../shared\";\nimport { trackEffects, triggerEffects, isTracking } from \"./effect\"\nimport { reactive } from \"./reactive\";\n\nclass RefImpl {\n  private _value: any\n  // 这里我们也需要一个 dep Set 用于储存所有的依赖\n  public dep;\n  private _rawValue: any\n  public __v_isRef = true;\n  constructor(value) {\n    // 保存一下 value，在 set 中用于对比\n    this._rawValue = value\n    // 如果 value 是一个对象，调用 reactive 进行转换\n    this._value = convert(value);\n    this.dep = new Set();\n  }\n  get value() {\n    // 在 get 中进行依赖收集\n    // if (isTracking()) {\n    //   trackEffects(this.dep);\n    // }\n    // 提取函数\n    trackRefValue(this)\n    return this._value\n  }\n  set value(newValue) {\n    // 判断下 newValue 和 this._value 是否相等\n    // 如果 value 是一个 对象，那么 this._value 是经过 reactive 处理过的，会是一个 proxy 的对象，所以这里需要处理一下\n    // 在 constructor 中 我们直接将值保存在 this._rawValue， 对比的时候对比这个值就行\n    if (hasChanged(newValue, this._rawValue)) {\n    // 一定先去修改了 value \n      this._rawValue = newValue\n      this._value = convert(newValue);\n      // 在 set 中进行触发依赖\n      triggerEffects(this.dep);\n    }\n  }\n}\n\nfunction trackRefValue(ref) {\n  if (isTracking()) {\n    trackEffects(ref.dep);\n  }\n}\n\nfunction convert(value) {\n  return isObject(value) ? reactive(value) : value;\n}\n\nexport function ref(value) {\n  return new RefImpl(value)\n}\n\nexport function isRef(ref) {\n  return !!ref.__v_isRef;\n}\n\nexport function unRef(ref) {\n  return isRef(ref) ? ref.value : ref;\n}\n\nexport function proxyRefs(objectWithRefs) {\n  return new Proxy(objectWithRefs, {\n    get(target, key) {\n      return unRef(Reflect.get(target, key));\n    },\n\n    set(target, key, value) {\n      // set 分为两种情况：\n      // 如果原来的值是 ref，并且新的值不是 ref，那么就去更新原来的 ref.value = newValue\n      // 第二种情况就是原来的值是 ref，newValue 也是一个 ref，那么就直接替换就 OK 了\n      if (isRef(target[key]) && !isRef(value)) {\n        return (target[key].value = value);\n      } else {\n        return Reflect.set(target, key, value);\n      }\n    },\n  });\n}"],"names":[],"mappings":"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"}